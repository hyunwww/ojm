<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="org.ojm.mapper.StoreMapper"> <!-- 경로 표기법이 클래스명 표기법처럼 작성 -->
	<!-- 신규 매장 등록 -->
	<insert id="storeRegister" parameterType="org.ojm.domain.StoreVO">
		insert into store values(
			seq_sno.nextval,
			#{uno},
			#{sname},
			#{saddress},
			#{wd},
			#{kd},
			#{sphone},
			#{scate},
			#{sdeli},
			#{scrn},
			#{sdepo},
			#{slike},
			#{sstar},
			#{spermmit}, 
			#{openHour},
			#{smaxreserv},
			#{dayOff},
			sysdate
		)
	</insert>
	
	<!-- 매장의 전체목록(승인 대기 상태의 매장은 제외) -->
	<select id="allStore" resultType="org.ojm.domain.StoreVO" parameterType="int">
		select * from (
		select rownum rn, sno, uno, sname, saddress, wd , kd, sphone, scate, sdeli, scrn, sdepo, slike, sstar, spermmit, openhour, smaxreserv, dayoff from
		(select * from store where spermmit = 1 order by sname))
		where rn between #{start} and #{end}
	</select>
	
	<!-- top10  -->
	<select id="rank" resultType="org.ojm.domain.StoreVO">
		<![CDATA[
			select * from 
			(select * from store order by slike desc) 
			where rownum <= 10
		 ]]>
	</select>
	
	<!-- 특정 매장의 정보 가져오기  -->
	<select id="storeInfo" parameterType="int" resultType="org.ojm.domain.StoreVO">
		select * from store where sno = #{sno}
	</select>	
	
	<!-- 평가 작성 시 평점 평균 최신화  -->
	<update id="updateRate" parameterType="int">
		update store
		set sstar = 
		(select nvl(round(avg(rvstar),1), 0) from review where sno = #{sno}) 
		where sno = #{sno}
	</update>
	
	<!-- 매장 승인  -->
	<update id="storePermit" parameterType="int">
		update store set spermmit = 1 where sno = #{sno}
	</update>
	
	<!-- 특정 매장 삭제  -->
	<delete id="deleteStore" parameterType="int">
		delete from store where sno = #{sno}
	</delete>
	
	<!-- 좋아요 수 제어  -->
	<update id="storeLike" parameterType="int">
		update store
		set slike = slike + #{amount} 
		where sno = #{sno}
		
	</update>
	
	<!-- 검색어로 매장 검색  -->
	<select id="searchStore" parameterType="String" resultType="org.ojm.domain.StoreVO">
		select * from store where sname like #{input} and spermmit = 1
	</select>
	
	<!-- 유저번호에 해당하는 매장 불러오기 -->
	<select id="searchStoreByUno" parameterType="int" resultType="org.ojm.domain.StoreVO">
		select * from store where uno = #{uno}
	</select>
	
	<!-- 매장 정보 수정  -->
	<update id="updateStore" parameterType="org.ojm.domain.StoreVO">
		update store set scate = #{scate} , sdepo = #{sdepo} , sphone = #{sphone} , openhour = #{openHour} , scrn = #{scrn} , dayoff = #{dayOff},
		smaxreserv = #{smaxreserv}, sdeli = #{sdeli}
		where sno = #{sno}
	</update>
	
	
	<!-- 매장 필터링  -->
	
	<!-- review내용을 포함한 store 정보 -->
	<resultMap type="org.ojm.domain.StoreVO" id="storeMap">
		<result property="sno" column="sno"/>
		<result property="uno" column="uno"/>
		<result property="kd" column="kd"/>
		<result property="wd" column="wd"/>
		<result property="sname" column="sname"/>
		<result property="saddress" column="saddress"/>
		<result property="sphone" column="sphone"/>
		<result property="scate" column="scate"/>
		<result property="sdeli" column="sdeli"/>
		<result property="scrn" column="scrn"/>
		<result property="sdepo" column="sdepo"/>
		<result property="slike" column="slike"/>
		<result property="sstar" column="sstar"/>
		<result property="spermmit" column="spermmit"/>
		<result property="openHour" column="openhour"/>
		<result property="smaxreserv" column="smaxreserv"/>
		<collection property="revList" resultMap="reviewMap"></collection>
	</resultMap>
	
	<!-- 리뷰 정보  -->
	<resultMap type="org.ojm.domain.ReviewVO" id="reviewMap">
		<result property="rvno" column="rvno"/>
		<result property="sno" column="rsno"/>
		<result property="uno" column="runo"/>
		<result property="rvstar" column="rvstar"/>
		<result property="rvcontent" column="rvcontent"/>
		<result property="rvlike" column="rvlike"/>
		<result property="rvdate" column="rvdate"/>
	</resultMap>
	
	<select id="searchStoreByCate" parameterType="Map" resultMap="storeMap">
			select s.sno,s.uno,sname,saddress,wd,kd,sphone,sdeli,scrn,sdepo,slike,sstar,spermmit,openhour,smaxreserv,dayoff,rvno,r.sno rsno,r.uno runo,rvstar,rvcontent,rvlike,rvdate  
			from store s left join review r on s.sno = r.sno 
			<choose>
				<when test="cateList != null and cateList.size() > 0">
					where scate in 
					<foreach collection="cateList" item="cate" open="(" close=")" separator=",">
						#{cate} 
					</foreach> 
				</when>
				<otherwise>
					where 1 = 1 
				</otherwise>
			</choose>
			<choose>
				<when test="location != null and location.size() > 0">
					and saddress like 
					<foreach collection="location" item="loc">
						#{loc}
					</foreach>
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<choose>
				<when test="delivery != null and delivery.size() > 0" >
					and sdeli = 1 
				</when>
				<otherwise>
					and sdeli >= 0
				</otherwise>
			</choose>
			<choose>
				<when test="reservation != null and reservation.size() > 0">
					and smaxreserv > 0 
				</when>
				<otherwise>
					and smaxreserv >= 0
				</otherwise>
			</choose>
			and spermmit = 1
			
			
	</select>
	
	<!-- 신고 제출  -->
	<!-- rpdate sysdate, rpwriter 추가_0823/노헌 -->
	<insert id="reportSubmit" parameterType="org.ojm.domain.ReportVO">
		insert into report(rpno,uno,rpreason,rptitle,rpwriter,rpcontent,rpdate) values(
			seq_rpno.nextval,
			#{uno},
			#{rpreason},
			#{rptitle},
			#{rpwriter},
			#{rpcontent},
			sysdate
		)
	</insert>
	<!-- 푸쉬용 -->
	<insert id="addbook" parameterType="org.ojm.domain.BookVO">
		insert into book (bkno, sno,
		uno, bdate, btime, bman, bname, bphone, bdepo, breq, bcdate)
		values(seq_bkno.nextval, #{sno}, #{uno}, #{bdate}, #{btime}, #{bman}, #{bname}, #{bphone},
		#{bdepo}, #{breq}, sysdate)

	</insert>
	
	<select id="countStore" resultType="int">
		select count(*) from store where spermmit = 1
	</select>
	
	<!-- 관리자페이지 등록 요청 관리 탭 관련 -->
	<select id="getSrListWithPaging" resultType="org.ojm.domain.StoreVO">
		<![CDATA[
			select sno, uno, sname, spermmit, sdate
			from
				(select
				rownum rn, sno, uno, sname, spermmit, sdate from store
				where]]>
				<![CDATA[
				rownum <= #{pageNum} * #{amount})
				where rn > (#{pageNum} - 1) * #{amount} and
				spermmit = 0
		]]>
	</select>

	<select id="getSrTotalCount" resultType="int">
		select count(*) from store where spermmit = 0
	</select>
	
</mapper>